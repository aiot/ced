gateway.coap {
  ## @doc The gateway server required minimum heartbeat interval.
  ## When connection mode is enabled, this parameter is used to set the minimum heartbeat interval for the connection to be alive
  ## @path gateway.coap.heartbeat
  ## @type emqx_gateway_schema:duration()
  ## @default 30s
  heartbeat = 30s

  ## @doc Enable or disable connection mode.
  ## Connection mode is a feature of non-standard protocols. When connection mode is enabled, it is necessary to maintain the creation, authentication and alive of connection resources
  ## @path gateway.coap.connection_required
  ## @type boolean()
  ## @default false
  connection_required = false

  ## @doc The Notification Message will be delivered to the CoAP client if a new message received on an observed topic.
  ## The type of delivered coap message can be set to:
  ##   - non: Non-confirmable;
  ##   - con: Confirmable;
  ##   - qos: Mapping from QoS type of received message, QoS0 -> non, QoS1,2 -> con
  ## @path gateway.coap.notify_type
  ## @type enum: non | con | qos
  ## @default qos
  notify_type = qos

  ## @doc The Default QoS Level indicator for subscribe request.
  ## This option specifies the QoS level for the CoAP Client when establishing a subscription membership, if the subscribe request is not carried `qos` option. The indicator can be set to:
  ##   - qos0, qos1, qos2: Fixed default QoS level
  ##   - coap: Dynamic QoS level by the message type of subscribe request
  ##     * qos0: If the subscribe request is non-confirmable
  ##     * qos1: If the subscribe request is confirmable
  ## @path gateway.coap.subscribe_qos
  ## @type enum: qos0 | qos1 | qos2 | coap
  ## @default coap
  subscribe_qos = coap

  ## @doc The Default QoS Level indicator for publish request.
  ## This option specifies the QoS level for the CoAP Client when publishing a message to EMQX PUB/SUB system, if the publish request is not carried `qos` option. The indicator can be set to:
  ##   - qos0, qos1, qos2: Fixed default QoS level
  ##   - coap: Dynamic QoS level by the message type of publish request
  ##     * qos0: If the publish request is non-confirmable
  ##     * qos1: If the publish request is confirmable
  ## @path gateway.coap.publish_qos
  ## @type enum: qos0 | qos1 | qos2 | coap
  ## @default coap
  publish_qos = coap

  ## @doc
  ## @path gateway.coap.mountpoint
  ## @type binary()
  ## @default ""
  mountpoint = ""

  ## @path gateway.coap.listeners
  ## @link gateway.mqttsn.listeners
  listeners {
    ## @doc
    ## @path gateway.coap.listeners.udp
    ## @type map_struct()
    ## @link gateway.mqttsn.listeners.udp.$name


    ## @doc
    ## @path gateway.coap.listeners.dtls
    ## @type map_struct()
    ## @link gateway.mqttsn.listeners.dtls.$name

    }

  ## @doc Whether to enable this gateway
  ## @path gateway.coap.enable
  ## @type boolean()
  ## @default true
  enable = true

  ## @doc Whether to enable client process statistic
  ## @path gateway.coap.enable_stats
  ## @type boolean()
  ## @default true
  enable_stats = true

  ## @doc The idle time of the client connection process. It has two purposes:
  ##   1. A newly created client process that does not receive any client requests after that time will be closed directly.
  ##   2. A running client process that does not receive any client requests after this time will go into hibernation to save resources.
  ## @path gateway.coap.idle_timeout
  ## @type emqx_gateway_schema:duration()
  ## @default 30s
  idle_timeout = 30s

  ## @path gateway.coap.clientinfo_override
  ## @link gateway.stomp.clientinfo_override
  clientinfo_override {
    ## @doc Template for overriding username.
    ## @path gateway.coap.clientinfo_override.username
    ## @type binary()
    #  username  =

    ## @doc Template for overriding password.
    ## @path gateway.coap.clientinfo_override.password
    ## @type binary()
    #  password  =

    ## @doc Template for overriding clientid.
    ## @path gateway.coap.clientinfo_override.clientid
    ## @type binary()
    #  clientid  =
    }

  ## @doc Default authentication configs for all the gateway listeners. For per-listener overrides see <code>authentication</code>
  ##  in listener configs
  ## @path gateway.coap.authentication
  ## @type union() authn-builtin_db:authentication | authn-mysql:authentication | authn-postgresql:authentication | authn-mongodb:standalone | authn-mongodb:replica-set | authn-mongodb:sharded-cluster | authn-redis:standalone | authn-redis:cluster | authn-redis:sentinel | authn-http:get | authn-http:post | authn-jwt:hmac-based | authn-jwt:public-key | authn-jwt:jwks | authn-scram-builtin_db:authentication
  ## @link gateway.stomp.listeners.tcp.$name.authentication
  #  authentication  =
}

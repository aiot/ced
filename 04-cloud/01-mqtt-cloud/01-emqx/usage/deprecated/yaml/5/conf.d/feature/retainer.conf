retainer {
  enable = true

  max_payload_size = 128KB
  msg_expiry_interval = 16m
  msg_clear_interval = 0s
  stop_publish_clear_msg = false

  backend {
    type = built_in_database
    storage_type = disc
    max_retained_messages = 0
  }

  ## @path retainer.flow_control
  flow_control {
    ## @doc Size of the batch when reading messages from storage. 0 means no limit.
    ## @path retainer.flow_control.batch_read_number
    ## @type non_neg_integer()
    ## @default 0
    batch_read_number = 0

    ## @doc The number of retained messages can be delivered per batch.
    ## @path retainer.flow_control.batch_deliver_number
    ## @type 0..1000
    ## @default 0
    batch_deliver_number = 0

    ## @doc The rate limiter name for retained messages' delivery.
    ## Limiter helps to avoid delivering too many messages to the client at once, which may cause the client to block or crash, or drop messages due to exceeding the size of the message queue.
    ## The names of the available rate limiters are taken from the existing rate limiters under `limiter.batch`.
    ## If this field is empty, limiter is not used.
    ## @path retainer.flow_control.batch_deliver_limiter
    ## @type emqx_limiter_schema:bucket_name()
    #  batch_deliver_limiter  =
  }
}

# https://www.emqx.io/docs/zh/v4.4/getting-started/config.html
# https://www.emqx.io/docs/zh/v4.4/configuration/configuration.html
---
kind: ConfigMap
apiVersion: v1
metadata:
  namespace: aiot-case
  name: emqx
immutable: false
data:
  # https://github.com/emqx/emqx/blob/v{{kubethings.aiot.cloud.emqx.app.version}}/etc/emqx.conf
  emqx.conf: |
    listener.tcp.external = 0.0.0.0:1883
    listener.ssl.external = 0.0.0.0:8883
    listener.ssl.external.keyfile =
    listener.ssl.external.certfile =
    listener.ssl.external.cacertfile =
    listener.ssl.external.verify = verify_peer
    listener.ssl.external.fail_if_no_peer_cert = true
    listener.ssl.external.peer_cert_as_username = cn
    listener.ssl.external.peer_cert_as_clientid = cn
    listener.ws.external = 8083
    listener.ws.external.mqtt_path = /mqtt
    listener.ws.external.peer_cert_as_username = cn
    listener.ws.external.peer_cert_as_clientid = cn
    listener.ws.external.compress = true
    listener.wss.external = 8084
    listener.wss.external.mqtt_path = /mqtt
    listener.wss.external.verify = verify_peer
    listener.wss.external.fail_if_no_peer_cert = true
    listener.wss.external.peer_cert_as_username = cn
    listener.wss.external.peer_cert_as_clientid = cn
    listener.wss.external.keyfile =
    listener.wss.external.certfile =
    listener.wss.external.cacertfile =

    allow_anonymous = false
    acl_file =
    acl_nomatch = deny
    acl_deny_action = disconnect
    enable_acl_cache = on
    acl_cache_ttl = 1m

    # https://www.emqx.io/docs/zh/v4.4/advanced/cluster.html
    cluster.name = mqtt-cloud
    # cluster.discovery = k8s
    # cluster.k8s.apiserver = https://kube-apiserver.kube-system.svc.cluster.local:{{kube.apiserver.port}}
    # cluster.k8s.app_name = emqx
    # cluster.k8s.address_type = hostname
    # cluster.k8s.service_name = emqx-headless
    # cluster.k8s.namespace = aiot-case
    # cluster.k8s.suffix = svc.cluster.local
    cluster.autoheal = on
    cluster.autoclean = 5m
    cluster.proto_dist = inet_tls

    node.name =
    node.cookie = mqtt-cloud
    node.data_dir =
    node.ssl_dist_optfile =
    node.process_limit = 2097152
    node.max_ports = 1048576

    rpc.enable_ssl = 5369
    rpc.driver = ssl
    rpc.default_client_driver = ssl
    rpc.keyfile =
    rpc.certfile =
    rpc.cacertfile =

    # https://www.emqx.io/docs/zh/v4.4/getting-started/log.html
    log.to = console
    log.formatter = text
    log.level = info

  # https://www.emqx.io/docs/zh/v4.4/advanced/auth-mnesia.html
  # https://github.com/emqx/emqx/tree/v{{kubethings.aiot.cloud.emqx.app.version}}/apps/emqx_auth_mnesia
  # https://github.com/emqx/emqx/blob/v{{kubethings.aiot.cloud.emqx.app.version}}/apps/emqx_auth_mnesia/etc/emqx_auth_mnesia.conf
  emqx_auth_mnesia.conf: |
    auth.mnesia.password_hash = sha256

    auth.user.1.username = edge-app
    auth.user.1.password = edge-app
    auth.user.2.username = mqtt-edge
    auth.user.2.password = mqtt-edge
    auth.user.3.username = mqttx
    auth.user.3.password = mqttx

  # https://www.emqx.io/docs/zh/v4.4/advanced/auth-jwt.html
  # https://github.com/emqx/emqx/blob/v{{kubethings.aiot.cloud.emqx.app.version}}/apps/emqx_auth_jwt
  # https://github.com/emqx/emqx/blob/v{{kubethings.aiot.cloud.emqx.app.version}}/apps/emqx_auth_jwt/etc/emqx_auth_jwt.conf
  emqx_auth_jwt.conf: |

  # https://github.com/emqx/emqx/blob/v{{kubethings.aiot.cloud.emqx.app.version}}/etc/acl.conf
  # https://github.com/emqx/emqx/blob/v{{kubethings.aiot.cloud.emqx.app.version}}/deploy/charts/emqx/templates/configmap.acl.yaml
  # https://docs.emqx.com/zh/enterprise/v4.4/modules/internal_acl.html
  # https://www.emqx.io/docs/zh/v4.4/advanced/acl-file.html
  acl.conf: |
    { allow, {user, "dashboard"}, subscribe, ["$SYS/#"] }.
    { allow, {ipaddr, "127.0.0.1"}, pubsub, ["$SYS/#", "#"] }.
    { deny, all, subscribe, ["$SYS/#", {eq, "#"}] }.
    { allow, all}.

  # https://github.com/emqx/emqx/blob/v{{kubethings.aiot.cloud.emqx.app.version}}/apps/emqx_retainer
  # https://github.com/emqx/emqx/blob/v{{kubethings.aiot.cloud.emqx.app.version}}/apps/emqx_retainer/etc/emqx_retainer.conf
  emqx_retainer.conf: |

  # https://github.com/emqx/emqx/blob/v{{kubethings.aiot.cloud.emqx.app.version}}/apps/emqx_bridge_mqtt
  # https://github.com/emqx/emqx/blob/v{{kubethings.aiot.cloud.emqx.app.version}}/apps/emqx_bridge_mqtt/etc/emqx_bridge_mqtt.conf
  emqx_bridge_mqtt.conf: |

  # https://github.com/emqx/emqx/blob/v{{kubethings.aiot.cloud.emqx.app.version}}/apps/emqx_rule_engine
  # https://github.com/emqx/emqx/blob/v{{kubethings.aiot.cloud.emqx.app.version}}/apps/emqx_rule_engine/etc/emqx_rule_engine.conf
  emqx_rule_engine.conf: |

  # https://github.com/emqx/emqx/blob/v{{kubethings.aiot.cloud.emqx.app.version}}/apps/emqx_web_hook
  # https://github.com/emqx/emqx/blob/v{{kubethings.aiot.cloud.emqx.app.version}}/apps/emqx_web_hook/etc/emqx_web_hook.conf
  emqx_web_hook.conf: |

  # https://github.com/emqx/emqx/blob/v{{kubethings.aiot.cloud.emqx.app.version}}/apps/emqx_management
  # https://github.com/emqx/emqx/blob/v{{kubethings.aiot.cloud.emqx.app.version}}/apps/emqx_management/etc/emqx_management.conf
  emqx_management.conf: |
    management.application.default_secret = mqtt-cloud
    management.default_application.id = mqtt-cloud
    management.default_application.secret = mqtt-cloud

    # management.listener.http = 8081
    # management.listener.http.max_clients = 512
    management.listener.https = 8081
    management.listener.https.max_clients = 512
    management.listener.https.keyfile =
    management.listener.https.certfile =
    management.listener.https.cacertfile =
    management.listener.https.verify = verify_peer
    management.listener.https.fail_if_no_peer_cert = true

  # https://www.emqx.io/docs/zh/v4.4/getting-started/dashboard.html
  emqx_dashboard.conf: |

  # https://github.com/emqx/emqx/blob/v{{kubethings.aiot.cloud.emqx.app.version}}/apps/emqx_prometheus
  # https://github.com/emqx/emqx/blob/v{{kubethings.aiot.cloud.emqx.app.version}}/apps/emqx_prometheus/etc/emqx_prometheus.conf
  emqx_prometheus.conf: |
    prometheus.push.gateway.server =

  # https://github.com/emqx/emqx/blob/v{{kubethings.aiot.cloud.emqx.app.version}}/apps/emqx_recon
  # https://github.com/emqx/emqx/blob/v{{kubethings.aiot.cloud.emqx.app.version}}/apps/emqx_recon/etc/emqx_recon.conf
  emqx_recon.conf: |


  # https://github.com/emqx/emqx/blob/v{{kubethings.aiot.cloud.emqx.app.version}}/data/loaded_modules.tmpl
  # https://github.com/emqx/emqx/blob/v{{kubethings.aiot.cloud.emqx.app.version}}/deploy/charts/emqx/templates/configmap.loadedModules.yaml
  # https://docs.emqx.com/zh/enterprise/v4.4/modules/modules.html
  # https://www.emqx.io/docs/zh/v4.4/advanced/internal-modules.html
  loaded-modules: |

    # acl
    { emqx_mod_acl_internal, true }.
    # online and offline notification
    { emqx_mod_presence, true }.
    # topic rewrite
    { emqx_mod_rewrite, false }.
    # delayed publish
    { emqx_mod_delayed, false }.
    # mqtt subscription
    { emqx_mod_subscription, true }.
    # slow subscriptions statistics
    { emqx_mod_slow_subs, true }.
    # topic metric
    { emqx_mod_topic_metrics, true }.
    # trace
    { emqx_mod_trace, false }.

  # https://github.com/emqx/emqx/blob/v{{kubethings.aiot.cloud.emqx.app.version}}/data/loaded_plugins.tmpl
  # https://github.com/emqx/emqx/blob/v{{kubethings.aiot.cloud.emqx.app.version}}/deploy/charts/emqx/templates/configmap.loadedPlugins.yaml
  # https://docs.emqx.com/zh/enterprise/v4.4/advanced/plugins.html
  # https://www.emqx.io/docs/zh/v4.4/advanced/plugins.html
  loaded-plugins: |

    # authentication: https://www.emqx.io/docs/zh/v4.4/advanced/auth.html
    # authorization: https://www.emqx.io/docs/zh/v4.4/advanced/acl.html
    { emqx_auth_mnesia, true}.
    { emqx_auth_jwt, true}.
    { emqx_auth_pgsql, false}.
    { emqx_auth_mysql, false}.
    { emqx_auth_mongo, false}.
    { emqx_auth_redis, false}.
    { emqx_auth_ldap, false}.
    { emqx_auth_http, false}.

    # message storage
    { emqx_retainer, true }.
    # message bridge
    { emqx_bridge_mqtt, false }.
    # webhook
    { emqx_web_hook, true}.
    # rule engine based sql
    { emqx_rule_engine, true }.

    # api
    { emqx_management, true }.
    # dashboard
    { emqx_dashboard, true }.

    #
    { emqx_prometheus, true }.
    # https://www.emqx.io/docs/zh/v4.4/advanced/telemetry.html
    { emqx_telemetry, false }.

    # performance debugging
    { emqx_recon, false }.

# https://www.emqx.io/docs/zh/v4.4/configuration/environment-variable.html
# https://github.com/emqx/emqx/blob/v{{kubethings.aiot.cloud.emqx.app.version}}/deploy/charts/emqx/templates/configmap.env.yaml
---
kind: ConfigMap
apiVersion: v1
metadata:
  namespace: aiot-case
  name: emqx-env
immutable: false
data:
  # https://github.com/emqx/emqx/blob/v{{kubethings.aiot.cloud.emqx.app.version}}/deploy/docker/
  EMQX_NAME: emqx
  EMQX_HOST: ${POD_NAME}.${SERVICE_NAME}.${POD_NAMESPACE}.svc.cluster.local
  # # erlang node.name: erlang unique identifier
  # EMQX_NODE_NAME: emqx@${POD_NAME}.${SERVICE_NAME}.${POD_NAMESPACE}.svc.cluster.local

  # https://www.emqx.io/docs/zh/v4.4/getting-started/cluster.html
  EMQX_CLUSTER__DISCOVERY: k8s
  EMQX_CLUSTER__K8S__APISERVER: https://kube-apiserver.kube-system.svc.cluster.local:{{kube.apiserver.port}}
  EMQX_CLUSTER__K8S__APP_NAME: emqx
  EMQX_CLUSTER__K8S__ADDRESS_TYPE: hostname
  EMQX_CLUSTER__K8S__SERVICE_NAME: emqx-headless
  EMQX_CLUSTER__K8S__NAMESPACE: aiot-case
  EMQX_CLUSTER__K8S__SUFFIX: svc.cluster.local

# https://github.com/lf-edge/ekuiper/blob/{{kubethings.aiot.edge.kuiper.version}}/deploy/chart/usr/local/kuiper/templates/sevice.yaml
# https://github.com/lf-edge/ekuiper/blob/{{kubethings.aiot.edge.kuiper.version}}/deploy/chart/usr/local/kuiper/templates/StatefulSet.yaml
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  namespace: &app-namespace aiot-case
  name: &app-name kuiper
  # annotations:
  #   kubereloader.kubestation.aiot.hk/auto: "true"
spec:
  selector:
    matchLabels: &app-label
      app.kubernetes.io/name: kuiper
      app.kubernetes.io/component: server
      app.kubernetes.io/part-of: *app-namespace
      app.kubernetes.io/managed-by: kube
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 75%
  revisionHistoryLimit: 5

  template:
    metadata:
      labels:
        <<: *app-label

    spec:
      serviceAccountName: default
      automountServiceAccountToken: false

      terminationGracePeriodSeconds: 0
      nodeSelector:
        node-role.kubernetes.io/edge: ""
        node-role.kubernetes.io/aiot-case: ""
      tolerations:
        - operator: Exists

      hostIPC: false
      hostPID: false
      hostNetwork: true

      dnsPolicy: ClusterFirstWithHostNet
      dnsConfig:
        options:
          - name: single-request-reopen

      restartPolicy: Always

      volumes:
        - name: config
          configMap:
            name: kuiper
            items:
              - key: kuiper.yaml
                path: kuiper.yaml
              - key: client.yaml
                path: client.yaml
              - key: connection.yaml
                path: connection.yaml
              - key: mqtt.yaml
                path: mqtt.yaml
              - key: zeromq.yaml
                path: zeromq.yaml
              - key: neuron.yaml
                path: neuron.yaml
              - key: edgex.yaml
                path: edgex.yaml
              - key: random.yaml
                path: random.yaml
            defaultMode: 0644
            optional: true

        - name: cert
          secret:
            secretName: kuiper-cert
            items:
              - key: tls.key
                path: tls.key
              - key: tls.crt
                path: tls.crt
              - key: ca.crt
                path: ca.crt
            defaultMode: 0644
            optional: true
        - name: cert-mqtt-edge-client
          secret:
            secretName: nanomq-client-cert-kuiper
            tems:
              - key: tls.key
                path: tls.key
              - key: tls.crt
                path: tls.crt
              - key: ca.crt
                path: ca.crt
            defaultMode: 0644
            optional: true
        - name: cert-mqtt-cloud-client
          secret:
            secretName: emqx-client-cert-kuiper
            items:
              - key: tls.key
                path: tls.key
              - key: tls.crt
                path: tls.crt
              - key: ca.crt
                path: ca.crt
            defaultMode: 0644
            optional: true

        - name: data
          hostPath:
            path: /data/aiot/edge/data-processor/rule-engine/kuiper/
            type: DirectoryOrCreate

      containers:
        - image: {{kubethings.image.repository}}/kuiper:{{kubethings.aiot.edge.kuiper.version}}
          imagePullPolicy: {{kubethings.image.pullPolicy}}
          name: *app-name

          volumeMounts:
            - name: config
              subPath: kuiper.yaml
              mountPath: /usr/local/kuiper/etc/kuiper.yaml
              readOnly: false
            - name: config
              subPath: client.yaml
              mountPath: /usr/local/kuiper/etc/client.yaml
              readOnly: false

            - name: config
              subPath: connection.yaml
              mountPath: /usr/local/kuiper/etc/connections/connection.yaml
              readOnly: false
            - name: config
              subPath: mqtt.yaml
              mountPath: /usr/local/kuiper/etc/mqtt_source.yaml
              readOnly: false
            - name: config
              subPath: zeromq.yaml
              mountPath: /usr/local/kuiper/etc/sources/zmq.yaml
              readOnly: false
            - name: config
              subPath: neuron.yaml
              mountPath: /usr/local/kuiper/etc/sources/neuron.yaml
              readOnly: false
            - name: config
              subPath: edgex.yaml
              mountPath: /usr/local/kuiper/etc/sources/edgex.yaml
              readOnly: false
            - name: config
              subPath: random.yaml
              mountPath: /usr/local/kuiper/etc/sources/random.yaml
              readOnly: false

            - name: cert
              subPath: tls.key
              mountPath: /usr/local/kuiper/etc/pki/tls.key
              readOnly: true
            - name: cert
              subPath: tls.crt
              mountPath: /usr/local/kuiper/etc/pki/tls.crt
              readOnly: true
            - name: cert
              subPath: ca.crt
              mountPath: /usr/local/kuiper/etc/pki/ca.crt
              readOnly: true
            - name: cert-mqtt-edge-client
              subPath: tls.key
              mountPath: /usr/local/kuiper/etc/pki/mqtt-edge.client.tls.key
              readOnly: true
            - name: cert-mqtt-edge-client
              subPath: tls.crt
              mountPath: /usr/local/kuiper/etc/pki/mqtt-edge.client.tls.crt
              readOnly: true
            - name: cert-mqtt-edge-client
              subPath: ca.crt
              mountPath: /usr/local/kuiper/etc/pki/mqtt-edge.ca.crt
              readOnly: true
            - name: cert-mqtt-cloud-client
              subPath: tls.key
              mountPath: /usr/local/kuiper/etc/pki/mqtt-cloud.client.tls.key
              readOnly: true
            - name: cert-mqtt-cloud-client
              subPath: tls.crt
              mountPath: /usr/local/kuiper/etc/pki/mqtt-cloud.client.tls.crt
              readOnly: true
            - name: cert-mqtt-cloud-client
              subPath: ca.crt
              mountPath: /usr/local/kuiper/etc/pki/mqtt-cloud.ca.crt
              readOnly: true

            - name: data
              mountPath: /usr/local/kuiper/data
              readOnly: false

          envFrom:
            - configMapRef:
                name: kuiper-env
                optional: true
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP

          securityContext:
            runAsGroup: 0
            runAsUser: 0
            runAsNonRoot: false
            privileged: false
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false

          stdin: false
          tty: false
          terminationMessagePolicy: FallbackToLogsOnError
          terminationMessagePath: /dev/termination-log
          command:
            - /usr/local/kuiper/bin/kuiperd

          ports:
            - name: http-api
              protocol: TCP
              containerPort: &port-http-api 9081
            - name: cli-api
              protocol: TCP
              containerPort: &port-cli-api 20498
          startupProbe:
            httpGet:
              port: *port-http-api
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 24
          # readinessProbe:
          #   httpGet:
          #     port: *port-http-api
          #   initialDelaySeconds: 0
          #   periodSeconds: 5
          #   timeoutSeconds: 1
          #   successThreshold: 1
          #   failureThreshold: 1
          livenessProbe:
            httpGet:
              port: *port-http-api
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 2

---
kind: Service
apiVersion: v1
metadata:
  namespace: &app-namespace aiot-case
  name: &app-name kuiper-manager
  labels: &app-label
    app.kubernetes.io/name: kuiper
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/part-of: *app-namespace
    app.kubernetes.io/managed-by: kube
spec:
  selector:
    <<: *app-label
  publishNotReadyAddresses: false
  ports:
    - name: server
      protocol: TCP
      port: 9082
      targetPort: 9082
  type: NodePort
  sessionAffinity: ClientIP
---
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: &app-namespace aiot-case
  name: &app-name kuiper-manager
  # annotations:
  #   kubereloader.kubestation.aiot.hk/auto: "true"
spec:
  replicas: 3
  selector:
    matchLabels: &app-label
      app.kubernetes.io/name: kuiper
      app.kubernetes.io/component: dashboard
      app.kubernetes.io/part-of: *app-namespace
      app.kubernetes.io/managed-by: kube
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  revisionHistoryLimit: 5

  template:
    metadata:
      labels:
        <<: *app-label
      annotations:
        co.elastic.logs/enabled: "false"
        co.elastic.logs/encoding: utf-8

    spec:
      serviceAccountName: default
      automountServiceAccountToken: false

      terminationGracePeriodSeconds: 0
      nodeSelector:
        node-role.kubernetes.io/cloud: ""
        node-role.kubernetes.io/aiot-case: ""
      affinity:
        # nodeAffinity:
        #   requiredDuringSchedulingIgnoredDuringExecution:
        #     nodeSelectorTerms:
        #       - matchExpressions:
        #           - key: node-role.kubernetes.io/cloud
        #             values:
        #               - ""
        #             operator: In
        #           - key: node-role.kubernetes.io/aiot-case
        #             values:
        #               - ""
        #             operator: In
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    <<: *app-label
      tolerations:
        - operator: Exists

      hostIPC: false
      hostPID: false
      hostNetwork: false

      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: single-request-reopen

      restartPolicy: Always

      volumes:
        - name: config
          configMap:
            name: kuiper-manager
            defaultMode: 0644
            optional: true

        - name: cert
          secret:
            secretName: kuiper-manager-cert
            defaultMode: 0644
            optional: true

      containers:
        - image: {{kubethings.image.repository}}/kuiper-manager:{{kubethings.aiot.edge.kuiper.version}}
          imagePullPolicy: {{kubethings.image.pullPolicy}}
          name: *app-name

          volumeMounts:
            - name: config
              subPath: conf.yaml
              mountPath: /usr/local/kuiper-manager/etc/conf.yaml
              readOnly: false

            - name: cert
              subPath: tls.key
              mountPath: /usr/local/kuiper-manager/etc/pki/tls.key
              readOnly: true
            - name: cert
              subPath: tls.crt
              mountPath: /usr/local/kuiper-manager/etc/pki/tls.crt
              readOnly: true
            - name: cert
              subPath: ca.crt
              mountPath: /usr/local/kuiper-manager/etc/pki/ca.crt
              readOnly: true

          # envFrom:
          #   - configMapRef:
          #       name: kuiper-manager-env
          #       optional: true
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP

          securityContext:
            runAsGroup: 0
            runAsUser: 0
            runAsNonRoot: false
            privileged: false
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false

          stdin: false
          tty: false
          terminationMessagePolicy: FallbackToLogsOnError
          terminationMessagePath: /dev/termination-log
          command:
            - /usr/local/kuiper-manager/kuiper-manager

          ports:
            - name: server
              protocol: TCP
              containerPort: &port-server 9082
          startupProbe:
            httpGet:
              scheme: HTTPS
              port: *port-server
              path: /readyz
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 24
          readinessProbe:
            httpGet:
              scheme: HTTPS
              port: *port-server
              path: /readyz
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 1
          livenessProbe:
            httpGet:
              scheme: HTTPS
              port: *port-server
              path: /healthz
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 2
